<?php

class Database {

    private $host;            
    private $user;        
    private $password;    
    private $database;    
    public $queryCount = 0;
    public $queries = array();
    public $conn;
    
    /*------------------------------------
              CONFIG CONNECTION
    ------------------------------------*/
    
    function __construct() {
        $this -> host = DATABASE_HOST;
        $this -> user = DATABASE_USER;
        $this -> password = DATABASE_PASSWORD;
    }
    
    function connect($new = false) {
        $this -> conn = mysql_connect($this->host, $this->user, $this->password, $new);
        if(!$this -> conn) {
            throw new Exception('We\'re working on a few connection issues.');
        }
    }
    
    function changeDatabase($database) {
        $this -> database = $database;
        if($this -> conn) {
            if(!mysql_select_db($database, $this->conn)) {
                throw new CustomException('We\'re working on a few connection issues.');
            }
        }
    }
    
    function lazyLoadConnection() {
        $this -> connect(true);
        if($this -> database) $this -> changeDatabase($this -> database);
    }
    
    /*-----------------------------------
                       QUERY
    ------------------------------------*/
    
    function query($query) {
        
        if(!$this -> conn) $this -> lazyLoadConnection();
        
        $args  = func_get_args();
        $query = array_shift($args);
        $query = str_replace("?", "%s", $query);
        
        foreach($args AS $key => $val){
            
            $args[$key] = preg_replace('|[^0-9a-zA-Z~@#$%=:;_{}, \\n\\\!\^&\*\(\)\-\+\.\?\/\'\"]|', "", $val);
            $args[$key] = mysql_real_escape_string(Base::cleanTags(stripslashes($args[$key])));
            
        }
        
        array_unshift($args, $query);
               
        $query = call_user_func_array('sprintf', $args);
        
        $start = $this -> getTime();
        $rs = mysql_query($query, $this -> conn);
        $this -> queryCount += 1;
        $this -> logQuery($query, $start);
        if(!$rs) {
            if(IS_PRODUCTION===TRUE){
                Base::logSQL('error', 0, $query, mysql_error());
            }else{
                Base::myMysqlError(mysql_error(), __FILE__, __LINE__, $query);    
            }
        }

        return $rs;
        
    }
    
    function aquery($query) {
        
        if(!$this -> conn) $this -> lazyLoadConnection();
        
        $args  = func_get_args();
        $query = array_shift($args);
        $query = str_replace("?", "%s", $query);
        
        foreach($args AS $key => $val){
        
            $args[$key] = mysql_real_escape_string($args[$key]);
            
        }
        
        array_unshift($args, $query);
               
        $query = call_user_func_array('sprintf', $args);
        
        $start = $this -> getTime();
        $rs = mysql_query($query, $this -> conn);
        $this -> queryCount += 1;
        $this -> logQuery($query, $start);
        if(!$rs) {
            if(IS_PRODUCTION===TRUE){
                Base::logSQL('error', 0, $query, mysql_error());
            }else{
                Base::myMysqlError(mysql_error(), __FILE__, __LINE__, $query);    
            }
        }

        return $rs;
        
    }

    
    /*-----------------------------------
                  DEBUGGING
    ------------------------------------*/
    
    function logQuery($sql, $start) {
        $query = array(
                'sql' => $sql,
                'time' => ($this -> getTime() - $start)*1000
            );
        array_push($this -> queries, $query);
    }
    
    function getTime() {
        $time = microtime();
        $time = explode(' ', $time);
        $time = $time[1] + $time[0];
        $start = $time;
        return $start;
    }
    
    public function getReadableTime($time) {
        $ret = $time;
        $formatter = 0;
        $formats = array('ms', 's', 'm');
        if($time >= 1000 && $time < 60000) {
            $formatter = 1;
            $ret = ($time / 1000);
        }
        if($time >= 60000) {
            $formatter = 2;
            $ret = ($time / 1000) / 60;
        }
        $ret = number_format($ret,3,'.','') . ' ' . $formats[$formatter];
        return $ret;
    }
    
    function __destruct()  {
        @mysql_close($this->conn);
    }
    
}

?>