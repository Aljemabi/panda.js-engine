game.module(
    'game.levels.level1'
)
.body(function() {

Level1 = {
    name: 'LEVEL 1',
    targetScore: 5000,
    players: [
        [30, 200],
        [1024-30, 200]
    ],
    music: 'music',
    playerCount: [4, 4],
    objects: [
        // object, x, y, angle
        ['Apple', 348, 267],
        ['Apple', 677, 264],
        ['Apple', 459, 107],
        ['Apple', 564, 109],
        ['Apple', 172, 600],
        ['Apple', 219, 600],
        ['Apple', 802, 603],
        ['Apple', 856, 603],
        ['Apple', 373, 556],
        ['Apple', 395, 590],
        ['Apple', 427, 613],
        ['Apple', 475, 626],
        ['Apple', 545, 633],
        ['Apple', 593, 613],
        ['Apple', 621, 586],
        ['Apple', 644, 556],
        ['Apple', 123, 141],
        ['Apple', 190, 111],
        ['Apple', 254, 78],
        ['Apple', 317, 55],
        ['Apple', 1024 - 123, 141],
        ['Apple', 1024 - 190, 111],
        ['Apple', 1024 - 254, 78],
        ['Apple', 1024 - 317, 55],
        ['Bush', 1024 / 2 - 200, 200],
        ['Bush', 1024 / 2 + 200, 200],
        ['Bush', 1024 / 2 - 130, 330],
        ['Bush', 1024 / 2 + 130, 330],
        ['Bush', 1024 / 2 - 130, 700],
        ['Bush', 1024 / 2 + 130, 700],
        ['Bush', 1024 / 2 - 230, 600],
        ['Bush', 1024 / 2 + 230, 600],
        ['Bush', 1024 / 2 - 400, 600],
        ['Bush', 1024 / 2 + 400, 600],
        ['Bush', 1024 / 2 - 500, 550],
        ['Bush', 1024 / 2 + 500, 550],
        ['Apple', 1024 / 2, 670],
        ['Apple', 1024 / 2, 700],
        ['Apple', 1024 / 2, 730],
        ['Apple', 1024 / 2 - 314, 660],
        ['Apple', 1024 / 2 + 314, 660],
        ['Apple', 1024 / 2 - 450, 572],
        ['Apple', 1024 / 2 + 450, 572],
        ['Block', 30-10, 300, 60 * (Math.PI / 180)],
        ['Block', 60-10, 340, 45 * (Math.PI / 180)],
        ['Block', 100-10, 370, 30 * (Math.PI / 180)],
        ['Block', 150-10, 390, 15 * (Math.PI / 180)],
        ['Block', 1024 - 30+10, 300, -60 * (Math.PI / 180)],
        ['Block', 1024 - 60+10, 340, -45 * (Math.PI / 180)],
        ['Block', 1024 - 100+10, 370, -30 * (Math.PI / 180)],
        ['Block', 1024 - 150+10, 390, -15 * (Math.PI / 180)],
        ['Block', 30-10+330, 300+270, 60 * (Math.PI / 180)],
        ['Block', 60-10+330, 340+270, 45 * (Math.PI / 180)],
        ['Block', 100-10+330, 370+270, 30 * (Math.PI / 180)],
        ['Block', 150-10+330, 390+270, 15 * (Math.PI / 180)],
        ['Block', 1024 - 30+10-330, 300+270, -60 * (Math.PI / 180)],
        ['Block', 1024 - 60+10-330, 340+270, -45 * (Math.PI / 180)],
        ['Block', 1024 - 100+10-330, 370+270, -30 * (Math.PI / 180)],
        ['Block', 1024 - 150+10-330, 390+270, -15 * (Math.PI / 180)],
        ['Block', 1024 / 2 - 50, 220, -90 * (Math.PI / 180)],
        ['Block', 1024 / 2 + 50, 220, -90 * (Math.PI / 180)],
        ['Block', 1024 / 2 - 50, 220 - 50, -90 * (Math.PI / 180)],
        ['Block', 1024 / 2 + 50, 220 - 50, -90 * (Math.PI / 180)],
        ['Block', 1024 / 2 - 350, 650, 45 * (Math.PI / 180)],
        ['Block', 1024 / 2 - 280, 650, -45 * (Math.PI / 180)],
        ['Block', 1024 / 2 + 350, 650, -45 * (Math.PI / 180)],
        ['Block', 1024 / 2 + 280, 650, 45 * (Math.PI / 180)],
        ['Heart', 1024 / 2, 768 / 2 + 37],
        ['Ball', 1024 / 2 - 130, 400],
        ['Ball', 1024 / 2 + 130, 400],
        ['Brick', 1024 / 2, 70, Math.PI / 2],
        ['Brick', 1024 / 2, 120, Math.PI / 2],
        ['Brick', 1024 / 2, 170, Math.PI / 2],
        ['Brick', 1024 / 2, 220, Math.PI / 2],
        ['Brick', 1024 / 2, 270, Math.PI / 2],
        ['Brick', 1024 / 2, 320, Math.PI / 2],
        ['Brick', 1024 / 2, 370, Math.PI / 2],
        ['Brick', 1024 / 2, 470, Math.PI / 2],
        ['Brick', 1024 / 2, 520, Math.PI / 2],
        ['Brick', 1024 / 2, 570, Math.PI / 2]
    ],
    emitters: [
        // object, x, y, width, height, time
        ['Star', 1024 / 2, 768, 1024, 0, 2000]
    ]
};

});